plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"
group = project.maven_group

allprojects {
    version = project.mod_version + "." + getVersionSuffix()
    loom {
        shareCaches = true
    }
    afterEvaluate {
        migrateMappings.configure {
            outputDir = project.file("src/main/java")
        }
    }
}

afterEvaluate {
    logger.lifecycle("Version String: ${version}")
}

loom {
    accessWidener "src/main/resources/c2me.accesswidener"
}

configurations {
    implementation.extendsFrom shadowImpl
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    shadowImpl "com.ibm.async:asyncutil:${async_util_version}"
    shadowImpl "com.electronwill.night-config:toml:${night_config_version}"
    shadowImpl "org.threadly:threadly:${threadly_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jar {
    from "LICENSE"
}

shadowJar {
    archiveClassifier = "all-dev"
    configurations = [ project.configurations.shadowImpl ]
}

//noinspection UnnecessaryQualifiedReference
task("remapShadowJar", type: net.fabricmc.loom.task.RemapJarTask, dependsOn: shadowJar) {
    input = shadowJar.archiveFile
    archiveFileName = shadowJar.archiveFileName.get().replaceAll("-dev\\.jar\$", ".jar")
    addNestedDependencies = true
    remapAccessWidener = true
}

assemble.dependsOn(remapShadowJar)

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

String getVersionSuffix() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--broken'
        standardOutput = stdout
    }
    stdout = stdout.toString().strip()
    def suffix = ""
    if (stdout.endsWith("-dirty")) {
        stdout = stdout.substring(0, stdout.length() - "-dirty".length())
        suffix = "-dirty"
    }
    if (stdout.endsWith("-broken")) {
        stdout = stdout.substring(0, stdout.length() - "-broken".length())
        suffix = "-broken"
    }
    if (stdout.indexOf('-') < 0) {
        return 0;
    }
    def split = stdout.split('-')
    return split[split.length - 2] + suffix
}
